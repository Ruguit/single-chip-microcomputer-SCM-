C51 COMPILER V8.06   TEXT3                                                                 11/30/2022 22:38:10 PAGE 1   


C51 COMPILER V8.06, COMPILATION OF MODULE TEXT3
OBJECT MODULE PLACED IN Text3.OBJ
COMPILER INVOKED BY: D:\单片机\C51\BIN\C51.EXE Text3.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /**************************************************************************************
   2          深圳市普中科技有限公司（PRECHIN 普中）
   3          技术支持：www.prechin.net
   4          
   5          实验名称：步进电机实验
   6          接线说明：      
   7          实验现象：下载程序后，当按下KEY1键可调节电机旋转方向；当按下KEY2键，电机加速；
   8                            当按下KEY3键，电机减速
   9          注意事项：将步进电机红色线对接到“步进电机模块”输出端子J47的5V上，其它相序依次接入。                                                                                                                                                            
             - 
  10          ***************************************************************************************/
  11          #include "reg52.h"
  12          
  13          typedef unsigned int u16;       //对系统默认数据类型进行重定义
  14          typedef unsigned char u8;
  15          
  16          //定义ULN2003控制步进电机管脚
  17          sbit IN1_A=P1^0;
  18          sbit IN2_B=P1^1;
  19          sbit IN3_C=P1^2;
  20          sbit IN4_D=P1^3;
  21          
  22          //定义独立按键控制脚
  23          sbit KEY1=P3^1;
  24          sbit KEY2=P3^0;
  25          sbit KEY3=P3^2;
  26          sbit KEY4=P3^3;
  27          
  28          //使用宏定义独立按键按下的键值
  29          #define KEY1_PRESS      1
  30          #define KEY2_PRESS      2
  31          #define KEY3_PRESS      3
  32          #define KEY4_PRESS      4
  33          #define KEY_UNPRESS     0
  34          
  35          // 定义步进电机速度，值越小，速度越快
  36          // 最小不能小于1
  37          #define STEPMOTOR_MAXSPEED        1  
  38          #define STEPMOTOR_MINSPEED        5     
  39          
  40          
  41          /*******************************************************************************
  42          * 函 数 名       : delay_10us
  43          * 函数功能               : 延时函数，ten_us=1时，大约延时10us
  44          * 输    入       : ten_us
  45          * 输    出       : 无
  46          *******************************************************************************/
  47          void delay_10us(u16 ten_us)
  48          {
  49   1              while(ten_us--);        
  50   1      }
  51          
  52          /*******************************************************************************
  53          * 函 数 名       : delay_ms
  54          * 函数功能               : ms延时函数，ms=1时，大约延时1ms
C51 COMPILER V8.06   TEXT3                                                                 11/30/2022 22:38:10 PAGE 2   

  55          * 输    入       : ten_us
  56          * 输    出       : 无
  57          *******************************************************************************/
  58          void delay_ms(u16 ms)
  59          {
  60   1              u16 i,j;
  61   1              for(i=ms;i>0;i--)
  62   1                      for(j=110;j>0;j--);
  63   1      }
  64          
  65          /*******************************************************************************
  66          * 函 数 名       : step_motor_28BYJ48_send_pulse
  67          * 函数功能               : 输出一个数据给ULN2003从而实现向步进电机发送一个脉冲
  68          * 输    入       : step：指定步进序号，可选值0~7
  69                                             dir：方向选择,1：顺时针,0：逆时针
  70          * 输    出       : 无
  71          *******************************************************************************/
  72          void step_motor_28BYJ48_send_pulse(u8 step,u8 dir)
  73          {
  74   1              u8 temp=step;
  75   1              
  76   1              if(dir==0)      //如果为逆时针旋转
  77   1                      temp=7-step;//调换节拍信号
  78   1              switch(temp)//8个节拍控制：A->AB->B->BC->C->CD->D->DA
  79   1              {
  80   2                      case 0: IN1_A=1;IN2_B=0;IN3_C=0;IN4_D=0;break;
  81   2                      case 1: IN1_A=1;IN2_B=1;IN3_C=0;IN4_D=0;break;
  82   2                      case 2: IN1_A=0;IN2_B=1;IN3_C=0;IN4_D=0;break;
  83   2                      case 3: IN1_A=0;IN2_B=1;IN3_C=1;IN4_D=0;break;
  84   2                      case 4: IN1_A=0;IN2_B=0;IN3_C=1;IN4_D=0;break;
  85   2                      case 5: IN1_A=0;IN2_B=0;IN3_C=1;IN4_D=1;break;
  86   2                      case 6: IN1_A=0;IN2_B=0;IN3_C=0;IN4_D=1;break;
  87   2                      case 7: IN1_A=1;IN2_B=0;IN3_C=0;IN4_D=1;break;
  88   2                      default: IN1_A=0;IN2_B=0;IN3_C=0;IN4_D=0;break;//停止相序       
  89   2              }                       
  90   1      }
  91          
  92          /*******************************************************************************
  93          * 函 数 名       : key_scan
  94          * 函数功能               : 检测独立按键是否按下，按下则返回对应键值
  95          * 输    入       : mode=0：单次扫描按键
  96                                             mode=1：连续扫描按键
  97          * 输    出       : KEY1_PRESS：K1按下
  98                                             KEY2_PRESS：K2按下
  99                                             KEY3_PRESS：K3按下
 100                                             KEY4_PRESS：K4按下
 101                                             KEY_UNPRESS：未有按键按下
 102          *******************************************************************************/
 103          u8 key_scan(u8 mode)
 104          {
 105   1              static u8 key=1;
 106   1      
 107   1              if(mode)key=1;//连续扫描按键
 108   1              if(key==1&&(KEY1==0||KEY2==0||KEY3==0||KEY4==0))//任意按键按下
 109   1              {
 110   2                      delay_10us(1000);//消抖
 111   2                      key=0;
 112   2                      if(KEY1==0)
 113   2                              return KEY1_PRESS;
 114   2                      else if(KEY2==0)
 115   2                              return KEY2_PRESS;
 116   2                      else if(KEY3==0)
C51 COMPILER V8.06   TEXT3                                                                 11/30/2022 22:38:10 PAGE 3   

 117   2                              return KEY3_PRESS;
 118   2                      else if(KEY4==0)
 119   2                              return KEY4_PRESS;      
 120   2              }
 121   1              else if(KEY1==1&&KEY2==1&&KEY3==1&&KEY4==1)     //无按键按下
 122   1              {
 123   2                      key=1;                  
 124   2              }
 125   1              return KEY_UNPRESS;             
 126   1      }
 127          
 128          /*******************************************************************************
 129          * 函 数 名       : main
 130          * 函数功能               : 主函数
 131          * 输    入       : 无
 132          * 输    出       : 无
 133          *******************************************************************************/
 134          void main()
 135          {       
 136   1              u8 key=0;
 137   1              u8 dir=0;//默认逆时针方向
 138   1              u8 speed=STEPMOTOR_MAXSPEED;//默认最大速度旋转
 139   1              u8 step=0;
 140   1      
 141   1              while(1)
 142   1              {                       
 143   2                      key=key_scan(0);
 144   2                      if(key==KEY1_PRESS)//换向
 145   2                      {
 146   3                              dir=!dir;    
 147   3                      }
 148   2                      else if(key==KEY2_PRESS)//加速
 149   2                      {
 150   3                              if(speed>STEPMOTOR_MAXSPEED)
 151   3                                      speed-=1;                       
 152   3                      }
 153   2                      else if(key==KEY3_PRESS)//减速
 154   2                      {
 155   3                              if(speed<STEPMOTOR_MINSPEED)
 156   3                                      speed+=1;                       
 157   3                      }
 158   2                      step_motor_28BYJ48_send_pulse(step++,dir);
 159   2                      if(step==8)step=0;              
 160   2                      delay_ms(speed);                                                
 161   2              }               
 162   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    299    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
